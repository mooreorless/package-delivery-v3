!function(){function e(e,r){e.when("/register",{templateUrl:"/auth/register/register.view.html",controller:"registerCtrl",controllerAs:"vm"}).when("/login",{templateUrl:"/auth/login/login.view.html",controller:"loginCtrl",controllerAs:"vm"}).when("/profile",{templateUrl:"/profile/profile.view.html",controller:"profileCtrl",controllerAs:"vm"}).when("/orders",{templateUrl:"/orders/orders.view.html",controller:"OrderCtrl",controllerAs:"vm"}).when("/orders/new",{templateUrl:"/orders/newOrder.view.html",controller:"newOrderCtrl",controllerAs:"vm"}).when("/driver/orders",{templateUrl:"/driverorders.view.html",controller:"OrderCtrl",controllerAs:"vm"}).otherwise({redirectTo:"/login"}),r.html5Mode(!0)}function r(e,r,o){e.$on("$routeChangeStart",function(e,n,t){if(!o.isLoggedIn())switch(r.path()){case"/profile":console.log("login to view profile");break;case"/orders":console.log("login to view orders"),console.log("if user is logged in message with watermark here");break;case"/orders/new":console.log("login to make an order")}})}angular.module("packageDelivery",["ngRoute","toastr"]),angular.module("packageDelivery",["ngRoute","toastr"]).config(["$routeProvider","$locationProvider",e]).run(["$rootScope","$location","functionService",r])}(),function(){function e(){console.log("Home controller is running")}angular.module("packageDelivery").controller("homeCtrl",e)}(),function(){function e(e,r,o){var n=this;n.user={},r.getProfile().success(function(e){n.user=e}).error(function(r){o.error("Please sign in or make an account","Error"),e.path("/"),console.log(r)})}angular.module("packageDelivery").controller("profileCtrl",e),e.$inject=["$location","meanData","toastr"]}(),function(){function e(e,r,o,n){var t=this;t.isLoggedIn=o.isLoggedIn(),t.currentUser=o.currentUser();var i=t.currentUser.streetNumber+" "+t.currentUser.streetName;t.newOrder={userID:t.currentUser.email,pickUp:i,dropOff:"",notes:"",isFragile:"",isExpress:"",state:"new"},t.redirect=function(){e.path("orders")},t.onSubmit=function(){console.log("Placing Order"),console.log(t.newOrder),o.placeOrder(t.newOrder).error(function(e){n.error(e,"Error")}).then(t.redirect())}}angular.module("packageDelivery").controller("newOrderCtrl",e),e.$inject=["$location","$rootScope","functionService","toastr"]}(),function(){function e(e,r,o,n,t){var i=this;i.isLoggedIn=n.isLoggedIn(),i.currentUser=n.currentUser(),console.log(i.currentUser),n.getUserOrders(i.currentUser.email).error(function(e){t.warning(e,"Error")}).then(function(){e.path("orders"),r.orders=n.loadOrders()})}angular.module("packageDelivery").controller("OrderCtrl",e),e.$inject=["$location","$scope","$rootScope","functionService","toastr"]}(),function(){function e(e,r,o){var n=this;n.credentials={firstName:"",lastName:"",email:"",password:"",streetNumber:"",streetName:"",suburb:"",postCode:""},n.onSubmit=function(){console.log("Submitting registration"),console.log(n.credentials),r.register(n.credentials).error(function(e){o.error("Something went wrong, please try again","Error"),console.log(e)}).then(function(){e.path("profile")})}}angular.module("packageDelivery").controller("registerCtrl",e),e.$inject=["$location","functionService","toastr"]}(),function(){function e(e,r,o){var n=this;n.credentials={email:"",password:""},n.onSubmit=function(){console.log("Logging in"),r.login(n.credentials).error(function(e){o.error("Login failed. Please try again","Error"),console.log(e)}).then(function(){e.path("profile")})}}angular.module("packageDelivery").controller("loginCtrl",e),e.$inject=["$location","functionService","toastr"]}(),function(){function e(e,r){var o=function(){return e.get("/api/profile",{headers:{Authorization:"Bearer "+r.getToken()}})};return{getProfile:o}}angular.module("packageDelivery").service("meanData",e),e.$inject=["$http","functionService"]}(),function(){function e(e,r,o,n){var t,i=function(e){r.localStorage["mean-token"]=e,o.success("Login successful","Success"),console.log(e)},l=function(){return r.localStorage["mean-token"]},c=function(){var e,o=l();return!!o&&(e=o.split(".")[1],e=r.atob(e),e=JSON.parse(e),e.exp>Date.now()/1e3)},a=function(){if(c()){var e=l(),o=e.split(".")[1];return o=r.atob(o),o=JSON.parse(o),{email:o.email,name:o.firstName,streetNumber:o.streetNumber,streetName:o.streetName,suburb:o.suburb,postCode:o.postCode}}};return register=function(r){return console.log("register being called"),e.post("/api/register",r).success(function(e){i(e.token)})},login=function(r){return e.post("/api/login",r).success(function(e){i(e.token)})},logout=function(){r.localStorage.removeItem("mean-token")},placeOrder=function(r){return console.log("calling placeOrder"),e.post("/api/orders/new",r).success(function(e){console.log(e),console.log("finished posting to new order")})},getUserOrders=function(r){return e.get("/api/orders",{params:{user:r}}).success(function(e){console.log(e),t=e})},loadOrders=function(){return t},{currentUser:a,saveToken:i,getToken:l,isLoggedIn:c,register:register,login:login,logout:logout,placeOrder:placeOrder,getUserOrders:getUserOrders,orders:t,loadOrders:loadOrders}}angular.module("packageDelivery").service("functionService",e),e.$inject=["$http","$window","toastr","$location"]}(),function(){function e(e,r){var o=this;o.isLoggedIn=r.isLoggedIn(),o.currentUser=r.currentUser()}angular.module("packageDelivery").controller("navigationCtrl",e),e.$inject=["$location","functionService"]}(),function(){function e(){return{restrict:"EA",templateUrl:"/common/directives/navigation/navigation.template.html",controller:"navigationCtrl as navvm"}}angular.module("packageDelivery").directive("navigation",e)}();